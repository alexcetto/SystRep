package Tplogs;


/**
* Tplogs/TplogsPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Tplogs.idl
* den 16 maj 2016 kl 22:48 CEST
*/

public abstract class TplogsPOA extends org.omg.PortableServer.Servant
 implements Tplogs.TplogsOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("writeToMainLog", new java.lang.Integer (0));
    _methods.put ("isMainLogAvailable", new java.lang.Integer (1));
    _methods.put ("iAmWritingToMainLog", new java.lang.Integer (2));
    _methods.put ("canIWriteToMainLog", new java.lang.Integer (3));
    _methods.put ("mainLogIsFree", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Tplogs/Tplogs/writeToMainLog
       {
         this.writeToMainLog ();
         out = $rh.createReply();
         break;
       }


  //Dont really the parameters, do we send the file? so we write through a stream?
       case 1:  // Tplogs/Tplogs/isMainLogAvailable
       {
         boolean $result = false;
         $result = this.isMainLogAvailable ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 2:  // Tplogs/Tplogs/iAmWritingToMainLog
       {
         this.iAmWritingToMainLog ();
         out = $rh.createReply();
         break;
       }

       case 3:  // Tplogs/Tplogs/canIWriteToMainLog
       {
         boolean $result = false;
         $result = this.canIWriteToMainLog ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //
       case 4:  // Tplogs/Tplogs/mainLogIsFree
       {
         boolean $result = false;
         $result = this.mainLogIsFree ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Tplogs/Tplogs:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Tplogs _this() 
  {
    return TplogsHelper.narrow(
    super._this_object());
  }

  public Tplogs _this(org.omg.CORBA.ORB orb) 
  {
    return TplogsHelper.narrow(
    super._this_object(orb));
  }


} // class TplogsPOA
